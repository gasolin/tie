{"version":3,"sources":["src/components/Header.js","src/components/TetherInvoice.js","src/helpers/constants.js","src/components/InvoiceForm.js","src/view/Main.js","App.js"],"names":["alignment","title","withStyles","eva","symbol","address","amount","useState","invoice","setInvoice","showCopied","setShowCopied","useEffect","handleCopy","Clipboard","renderIcon","props","TouchableWithoutFeedback","onPress","MaterialIcons","name","size","color","style","iconText","View","styles","container","value","backdropStyle","backdrop","visible","anchor","label","accessoryRight","input","onBackdropPress","content","popup","theme","backgroundColor","StyleSheet","create","paddingVertical","flexDirection","alignItems","paddingHorizontal","SUPPORT_PAYMENTS","chain","process","_replace","_toLower","IndexPath","selectedIndex","setSelectedIndex","setAddress","setAmount","showInvoice","setShowInvoice","displayValue","row","displayChain","undefined","handleAddressChange","text","handlePaste","a","async","invalidData","length","_isNumber","onSelect","idx","field","map","item","key","placeholder","onChangeText","num","_toNumber","button","disabled","captionContainer","display","captionIcon","width","height","marginRight","captionText","fontSize","fontWeight","fontFamily","marginVertical","Header","App","Main","StatusBar","flex","justifyContent"],"mappings":"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","file":"static/js/app.2a2264e6.chunk.js","sourcesContent":["import React from 'react';\nimport { TopNavigation } from '@ui-kitten/components';\n\nexport default () => (\n  <TopNavigation\n    alignment='center'\n    title='Tether Invoice Generator'\n    // accessoryLeft={renderBackAction}\n    // accessoryRight={renderRightActions}\n  />\n)\n","import React, { useState, useEffect } from 'react'\nimport { TouchableWithoutFeedback, View, StyleSheet } from 'react-native'\nimport { Input, Layout, Popover, Text, withStyles } from '@ui-kitten/components'\nimport QRCode from 'react-native-qrcode-svg'\nimport * as Clipboard from 'expo-clipboard'\nimport { MaterialIcons } from '@expo/vector-icons'\n\nexport const TetherInvoice = ({ eva, symbol, address, amount }) => {\n  const [invoice, setInvoice] = useState('')\n  const [showCopied, setShowCopied] = useState(false)\n\n  useEffect(() => {\n    setInvoice(`${symbol}:${address}?amount=${amount}`)\n  }, [symbol, address, amount])\n\n  if (invoice === '') {\n    return null\n  }\n\n  const handleCopy = () => {\n    Clipboard.setString(invoice)\n    setShowCopied(true)\n  }\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={handleCopy}>\n      <MaterialIcons name=\"content-copy\" size={16} color={eva.style.iconText.color} />\n    </TouchableWithoutFeedback>\n  )\n\n  const renderInvoice = () => (\n    <Input\n      value={invoice}\n      label='Invoice'\n      accessoryRight={renderIcon}\n      style={styles.input}\n    />\n  )\n\n  return (\n    <View style={styles.container}>\n      <QRCode value={invoice} size={280} />\n      <Popover\n        backdropStyle={styles.backdrop}\n        visible={showCopied}\n        anchor={renderInvoice}\n        onBackdropPress={() => setShowCopied(false)}>\n        <Layout style={[styles.content, eva.style.popup]}>\n          <Text>\n            Invoice copied to Clipboard\n          </Text>\n        </Layout>\n      </Popover>\n    </View>\n  )\n}\n\nexport default withStyles(TetherInvoice, (theme) => ({\n  iconText: {\n    color: theme['color-primary-500'],\n  },\n  popup: {\n    backgroundColor: theme['color-success-100'],\n  }\n}))\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 16,\n  },\n  input: {\n    paddingVertical: 8,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n})\n","import _toLower from 'lodash/toLower'\nimport _replace from 'lodash/replace'\n\nexport const SUPPORT_PAYMENTS = [\n  {\n    name: 'USDt (Tron)',\n    symbol: 'usdt_tron',\n    chain: 'Tron',\n    process: (address) => _replace(_toLower(address), '0x', '')\n  },\n  {\n    name: 'USDt (Solana)',\n    symbol: 'usdt_sol',\n    chain: 'Solana',\n    process: (address) => _toLower(address)\n  },\n  {\n    name: 'USDt (Liquid)',\n    symbol: 'usdt_liquid',\n    chain: 'BTC Liquid',\n    process: (address) => _toLower(address)\n  }\n]\n","import React, { useState } from 'react'\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native'\nimport { Button, IndexPath, Input, Select, SelectItem, Text, withStyles } from '@ui-kitten/components'\nimport * as Clipboard from 'expo-clipboard'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport _isNumber from 'lodash/isNumber'\nimport _toNumber from 'lodash/toNumber'\n\nimport TetherInvoice from '../components/TetherInvoice'\nimport { SUPPORT_PAYMENTS } from '../helpers/constants'\n\nconst AlertIcon = (props) => (\n  <Text>{'Alert'}</Text>\n)\n\nexport const InvoiceForm = ({ eva }) => {\n  const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0))\n  const [address, setAddress] = useState('')\n  const [amount, setAmount] = useState(10)\n  const [showInvoice, setShowInvoice] = useState(false)\n  const displayValue = SUPPORT_PAYMENTS[selectedIndex?.row||0]?.name\n  const displayChain = SUPPORT_PAYMENTS[selectedIndex?.row||0]?.chain\n  const process = SUPPORT_PAYMENTS[selectedIndex?.row||0]?.process || undefined\n\n  const handleChange = (idx) => {\n    setSelectedIndex(idx)\n    // reset state\n    setAddress('')\n    setShowInvoice(false)\n  }\n\n  const handleAddressChange = (text) => setAddress(process ? process(text) : text)\n\n  const handlePaste = async () => {\n    const text = await Clipboard.getStringAsync()\n    handleAddressChange(text)\n  }\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={handlePaste}>\n      <MaterialIcons name=\"content-paste\" size={16} color={eva.style.iconText.color} />\n    </TouchableWithoutFeedback>\n  )\n\n  // const renderCaption = () => {\n  //   return (\n  //     <View style={styles.captionContainer}>\n  //       {AlertIcon(styles.captionIcon)}\n  //       <Text style={styles.captionText}>Should contain at least 8 symbols</Text>\n  //     </View>\n  //   )\n  // }\n\n  const generateInvoice = () => setShowInvoice(true)\n\n  const handleAmountChange = (text) => {\n    const num = _toNumber(text)\n    if (num) {\n      setAmount(num)\n    }\n  }\n\n  const invalidData =\n    address?.length === 0 ||\n    !_isNumber(amount) ||\n    amount <= 0\n\n  return (\n    <View>\n      <Select\n        label='Token - Chain'\n        selectedIndex={selectedIndex}\n        value={displayValue}\n        onSelect={handleChange}\n        style={styles.field}>\n        {SUPPORT_PAYMENTS.map((item) => (\n          <SelectItem title={item.name} key={item.symbol} />\n        ))}\n      </Select>\n      <Input\n        value={address}\n        label={`Address (${displayChain})`}\n        placeholder='Place your Address'\n        // caption={renderCaption}\n        accessoryRight={renderIcon}\n        onChangeText={handleAddressChange}\n        style={styles.field}\n      />\n      <Input\n        value={amount}\n        label='Amount (USDt)'\n        placeholder='10'\n        // caption={renderCaption}\n        // accessoryRight={renderIcon}\n        onChangeText={handleAmountChange}\n        style={styles.field}\n      />\n      <Button\n        onPress={generateInvoice}\n        style={styles.button}\n        disabled={invalidData}\n        >\n        Generate Invoice\n      </Button>\n      {showInvoice &&\n      <TetherInvoice\n        symbol={SUPPORT_PAYMENTS[selectedIndex?.row||0].symbol}\n        address={address}\n        amount={amount}\n      />}\n    </View>\n  )\n}\n\nexport default withStyles(InvoiceForm, (theme) => ({\n  iconText: {\n    color: theme['color-primary-500'],\n  },\n}))\n\nconst styles = StyleSheet.create({\n  captionContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  captionIcon: {\n    width: 10,\n    height: 10,\n    marginRight: 5\n  },\n  captionText: {\n    fontSize: 12,\n    fontWeight: \"400\",\n    fontFamily: \"opensans-regular\",\n    color: \"#8F9BB3\",\n  },\n  field: {\n    paddingVertical: 8,\n  },\n  button: {\n    paddingVertical: 16,\n    marginVertical: 8,\n  },\n})\n","import React from 'react'\nimport { View } from 'react-native'\n\nimport Header from '../components/Header'\nimport InvoiceForm from '../components/InvoiceForm'\n\nexport default () => (\n  <View>\n    <Header />\n    <InvoiceForm />\n  </View>\n)\n","import { StatusBar } from 'expo-status-bar'\nimport React from 'react'\nimport { StyleSheet } from 'react-native'\nimport * as eva from '@eva-design/eva'\nimport { ApplicationProvider, Layout } from '@ui-kitten/components'\n\nimport { default as theme } from './src/helpers/custom-theme.json'\nimport Main from './src/view/Main'\n\nconst App = () => (\n  <Layout style={styles.container}>\n    <Main />\n    <StatusBar style=\"auto\" />\n  </Layout>\n)\n\nexport default () => (\n  <ApplicationProvider {...eva} theme={{...eva.light, ...theme}}>\n    <App />\n  </ApplicationProvider>\n)\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})\n"],"sourceRoot":""}